import asyncpg
import logging


async def create_tables(
    pool: asyncpg.Pool, 
    db_logger: logging.Logger
):
    connect = await pool.acquire()
    try:
        async with connect.transaction():
            await connect.execute(
                """CREATE TABLE IF NOT EXISTS users(
                    user_id BIGINT PRIMARY KEY,
                    username VARCHAR(255) NOT NULL,
                    time_registration TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL
                )"""
            )
            await connect.execute(
                """CREATE TABLE IF NOT EXISTS categories(
                    category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    title VARCHAR(255) NOT NULL,
                    parent_id INT REFERENCES categories(category_id)
                )"""
            )
            await connect.execute(
                """CREATE TABLE IF NOT EXISTS items(
                    item_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    title VARCHAR(255) NOT NULL,
                    description VARCHAR(255),
                    photo_id VARCHAR(255),
                    price DECIMAL(8, 2) NOT NULL,
                    category_id INT NOT NULL REFERENCES categories(category_id)
                )"""
            )
            await connect.execute(
                """CREATE TABLE IF NOT EXISTS cart(
                    user_id BIGINT NOT NULL REFERENCES users(user_id),
                    item_id INT NOT NULL REFERENCES items(item_id),
                    quantity INT NOT NULL,
                    PRIMARY KEY (user_id, item_id)
                )"""
            )
            await connect.execute(
                """CREATE TABLE IF NOT EXISTS orders(
                    order_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    user_id BIGINT NOT NULL REFERENCES users(user_id),
                    time_create TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL,
                    status VARCHAR(255) NOT NULL,
                    address VARCHAR(255) NOT NULL
                )"""
            )
            await connect.execute(
                """CREATE TABLE IF NOT EXISTS order_items(
                    order_id INT NOT NULL REFERENCES orders(order_id),
                    item_id INT NOT NULL REFERENCES items(item_id),
                    quantity INT NOT NULL,
                    PRIMARY KEY (order_id, item_id)
                )"""
            )
    except Exception as e:
        db_logger.error(f"Failed to create tables: ({e})")
    else:
        db_logger.debug("Succesfully created tables")
    finally:
        await pool.release(connect)

